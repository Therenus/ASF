[{"C:\\Users\\svobo\\Documents\\Java_script\\ASF\\client\\src\\index.js":"1","C:\\Users\\svobo\\Documents\\Java_script\\ASF\\client\\src\\App.jsx":"2","C:\\Users\\svobo\\Documents\\Java_script\\ASF\\client\\src\\cAPI.js":"3","C:\\Users\\svobo\\Documents\\Java_script\\ASF\\client\\src\\Routes\\Home.jsx":"4","C:\\Users\\svobo\\Documents\\Java_script\\ASF\\client\\src\\Routes\\BookDetail.jsx":"5","C:\\Users\\svobo\\Documents\\Java_script\\ASF\\client\\src\\Routes\\BookUpdate.jsx":"6","C:\\Users\\svobo\\Documents\\Java_script\\ASF\\client\\src\\Routes\\BookAdd.jsx":"7","C:\\Users\\svobo\\Documents\\Java_script\\ASF\\client\\src\\Components\\UpdateBook.jsx":"8","C:\\Users\\svobo\\Documents\\Java_script\\ASF\\client\\src\\Components\\DetailBook.jsx":"9","C:\\Users\\svobo\\Documents\\Java_script\\ASF\\client\\src\\Components\\AddBook.jsx":"10","C:\\Users\\svobo\\Documents\\Java_script\\ASF\\client\\src\\Components\\Header.jsx":"11","C:\\Users\\svobo\\Documents\\Java_script\\ASF\\client\\src\\Components\\BookList.jsx":"12","C:\\Users\\svobo\\Documents\\Java_script\\ASF\\client\\src\\Apis\\BookFinder.js":"13"},{"size":268,"mtime":1694109134858,"results":"14","hashOfConfig":"15"},{"size":919,"mtime":1692986384326,"results":"16","hashOfConfig":"15"},{"size":542,"mtime":1693068404897,"results":"17","hashOfConfig":"15"},{"size":247,"mtime":1694112401084,"results":"18","hashOfConfig":"15"},{"size":255,"mtime":1694111662838,"results":"19","hashOfConfig":"15"},{"size":263,"mtime":1694115659484,"results":"20","hashOfConfig":"15"},{"size":246,"mtime":1694111656061,"results":"21","hashOfConfig":"15"},{"size":4036,"mtime":1694866332063,"results":"22","hashOfConfig":"15"},{"size":3497,"mtime":1694866354885,"results":"23","hashOfConfig":"15"},{"size":6490,"mtime":1694866311041,"results":"24","hashOfConfig":"15"},{"size":206,"mtime":1694111806849,"results":"25","hashOfConfig":"15"},{"size":1769,"mtime":1694866367828,"results":"26","hashOfConfig":"15"},{"size":112,"mtime":1695411998820,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},"n2x04v",{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"54"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"54"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"54"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\svobo\\Documents\\Java_script\\ASF\\client\\src\\index.js",[],[],[],"C:\\Users\\svobo\\Documents\\Java_script\\ASF\\client\\src\\App.jsx",[],[],"C:\\Users\\svobo\\Documents\\Java_script\\ASF\\client\\src\\cAPI.js",[],[],"C:\\Users\\svobo\\Documents\\Java_script\\ASF\\client\\src\\Routes\\Home.jsx",[],[],"C:\\Users\\svobo\\Documents\\Java_script\\ASF\\client\\src\\Routes\\BookDetail.jsx",[],[],"C:\\Users\\svobo\\Documents\\Java_script\\ASF\\client\\src\\Routes\\BookUpdate.jsx",[],[],"C:\\Users\\svobo\\Documents\\Java_script\\ASF\\client\\src\\Routes\\BookAdd.jsx",[],[],"C:\\Users\\svobo\\Documents\\Java_script\\ASF\\client\\src\\Components\\UpdateBook.jsx",["73"],[],"import React, { useEffect, useState } from 'react'\r\nimport { useNavigate, useParams } from 'react-router-dom'\r\nimport BookFinder from '../Apis/BookFinder';\r\n\r\nconst UpdateBook = (props) => {\r\n    const {isbn} = useParams()\r\n    const [title, setTitle] = useState(\"\")\r\n    const [author, setAuthor] = useState(\"\")\r\n    const [year, setYear] = useState(\"\")\r\n    const [publisher, setPublisher] = useState(\"\")\r\n    const [language, setLanguage] = useState(\"\")\r\n    const navigate = useNavigate()\r\n\r\n    useEffect(() => {\r\n        const fetchdata = async () => {\r\n          try {\r\n            const response = await BookFinder.get(`/${isbn}`);\r\n            setTitle(response.data.data.books.title);\r\n            setAuthor(response.data.data.books.author);\r\n            setYear(response.data.data.books.year);\r\n            setPublisher(response.data.data.books.publisher);\r\n            setLanguage(response.data.data.books.language);\r\n          } catch (err) {\r\n            console.log(err);\r\n          }\r\n        }\r\n        fetchdata();\r\n      },[])\r\n\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        try{\r\n            await BookFinder.put(`/${isbn}`, {\r\n                title,\r\n                author,\r\n                year,\r\n                publisher,\r\n                language,\r\n            })\r\n        } catch (err) {\r\n            console.log(err);            \r\n        }\r\n        navigate(-1)\r\n        \r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h4>{isbn}</h4>\r\n            <form >\r\n\r\n                <div className=\"mb-3\">\r\n                    <label htmlFor=\"title\" className=\"form-label\">Title</label>\r\n                    <input className=\"form-control\" type=\"text\"\r\n                    id=\"title\"\r\n                    value={title}\r\n                    onChange={(e) => {setTitle(e.target.value)}}  \r\n                    required\r\n                    />\r\n                </div>\r\n  \r\n                <div className=\"mb-3\">\r\n                    <label htmlFor=\"author\" className=\"form-label\">Author</label>\r\n                    <input className=\"form-control\" type=\"text\"\r\n                    id=\"author\"\r\n                    value={author} \r\n                    onChange={(e) => {setAuthor(e.target.value)}}\r\n                    required\r\n                    />\r\n                </div>\r\n          \r\n                <div className=\"mb-3\">\r\n                    <label htmlFor=\"year\" className=\"form-label\">Year</label>\r\n                    <input className=\"form-control\" type=\"text\"\r\n                    id=\"year\"\r\n                    value={year}\r\n                    onChange={(e) => {setYear(e.target.value)}}\r\n                    placeholder=\"YYYY\"\r\n                    required\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"mb-3\">\r\n                    <label htmlFor=\"publisher\" className=\"form-label\">Publisher</label>\r\n                    <input className=\"form-control\" type=\"text\"\r\n                    id=\"publisher\"\r\n                    value={publisher} \r\n                    onChange={(e) => {setPublisher(e.target.value)}}\r\n                    required\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"mb-3\">\r\n                    <label htmlFor=\"language\" className=\"form-label\">Language</label>\r\n                    <input className=\"form-control\" type=\"text\"\r\n                    id=\"language\"\r\n                    value={language}\r\n                    onChange={(e) => {setLanguage(e.target.value)}}\r\n                    required\r\n                    />\r\n                </div>\r\n\r\n                <div className=\"d-grid gap-2 d-md-flex justify-content-md-end\">\r\n                <button type=\"button\" onClick={(e) => {e.stopPropagation(); navigate(-1) } } className=\"btn btn-primary\">Back</button>\r\n                <button type=\"submit\" onClick={handleSubmit} className=\"btn btn-success\">Submit</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UpdateBook\r\n",[],"C:\\Users\\svobo\\Documents\\Java_script\\ASF\\client\\src\\Components\\DetailBook.jsx",["74","75"],[],"import React, { useContext, useEffect } from 'react'\r\nimport { useNavigate, useParams } from 'react-router-dom'\r\nimport { BookContext } from '../cAPI'\r\nimport BookFinder from '../Apis/BookFinder'\r\n\r\nconst BookDetail = (props) => {\r\n  const {isbn} = useParams()\r\n  const {selectedBook, setSelectetBook} = useContext(BookContext)\r\n  const navigate = useNavigate()\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                const response = await BookFinder.get(`/${isbn}`);\r\n                setSelectetBook(response.data.data.books)\r\n            } catch (err) {\r\n                console.log(err);\r\n            }\r\n        }\r\n        fetchData();\r\n    },[])\r\n\r\n    if (selectedBook){\r\n        const handleDelete = async (e, isbn) => {\r\n            e.stopPropagation();\r\n            try {\r\n                const response = await BookFinder.delete(`/${isbn}`);\r\n  \r\n                navigate(`/`)\r\n            } catch (err) {\r\n                console.log(err);\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div className=\"list-group\">                \r\n                <form>\r\n                    <div className=\"mb-3\">\r\n                        <label className=\"form-label\" htmlFor=\"isbn\">ISBN</label>\r\n                        <input className=\"form-control\" type=\"text\" value={selectedBook.isbn} disabled readOnly />\r\n                    </div>\r\n\r\n                    <div className=\"mb-3\">\r\n                        <label className=\"form-label\" htmlFor=\"title\">Title</label>\r\n                        <input className=\"form-control\" type=\"text\" value={selectedBook.title} disabled readOnly />\r\n                    </div>\r\n\r\n                    <div className=\"mb-3\">\r\n                        <label className=\"form-label\" htmlFor=\"author\">Author</label>\r\n                        <input className=\"form-control\" type=\"text\" value={selectedBook.author} disabled readOnly />\r\n                    </div>\r\n\r\n                    <div className=\"mb-3\">\r\n                        <label className=\"form-label\" htmlFor=\"year\">Year</label>\r\n                        <input className=\"form-control\" type=\"text\" value={selectedBook.year} disabled readOnly />\r\n                    </div>\r\n\r\n                    <div className=\"mb-3\">\r\n                        <label className=\"form-label\" htmlFor=\"publisher\">Publisher</label>\r\n                        <input className=\"form-control\" type=\"text\" value={selectedBook.publisher} disabled readOnly />\r\n                    </div>\r\n\r\n                    <div className=\"mb-3\">\r\n                        <label className=\"form-label\" htmlFor=\"language\">Langueage</label>\r\n                        <input className=\"form-control\" type=\"text\" value={selectedBook.language} disabled readOnly />\r\n                        </div>\r\n\r\n                </form>\r\n                <div className=\"d-grid gap-2 d-md-flex justify-content-md-end\">\r\n                    <button type=\"button\" onClick={(e) => {e.stopPropagation(); navigate(`/`) } } className=\"btn btn-primary\">Back</button>\r\n                    <button type=\"button\" onClick={(e) => {e.stopPropagation(); navigate(`/${selectedBook.isbn}/update`) } } className=\"btn btn-warning\">Update</button>\r\n                    <button type=\"button\" onClick={(e) => handleDelete(e, selectedBook.isbn)} className=\"btn btn-danger\">Delete</button>\r\n                </div>            \r\n            </div>\r\n    )\r\n    }else{\r\n        navigate(`/`)  \r\n    }\r\n}\r\n\r\nexport default BookDetail","C:\\Users\\svobo\\Documents\\Java_script\\ASF\\client\\src\\Components\\AddBook.jsx",["76"],[],"import React, { useState } from 'react'\r\nimport BookFinder from '../Apis/BookFinder'\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\nconst AddBook = (props) => {\r\n\r\n    const [isbn, setIsbn] = useState(\"\")\r\n    const [title, setTitle] = useState(\"\")\r\n    const [author, setAuthor] = useState(\"\")\r\n    const [year, setYear] = useState(\"\")\r\n    const [publisher, setPublisher] = useState(\"\")\r\n    const [language, setLanguage] = useState(\"\")\r\n\r\n    const navigate = useNavigate()\r\n\r\n    const [form, setForm] = useState(\"[]\")\r\n    const [errors, setErrors] = useState(\"[]\")\r\n    \r\n    const setField = (field, value) => {\r\n        setForm({\r\n           ...form,\r\n           [field]:value \r\n        })\r\n\r\n        if(!!errors[field]){\r\n            setErrors({\r\n                ...errors,\r\n                [field]:null\r\n            })\r\n        }\r\n    }\r\n\r\n    const validateForm = () => {\r\n        const {isbn, title, author, year, publisher, language} = form\r\n        const newErrors = {}\r\n\r\n        if(!isbn || isbn === ''){\r\n            newErrors.isbn = 'Please add ISBN'\r\n            }else{\r\n                if (isbn.length > 17 || isbn.endsWith('-')){\r\n                    newErrors.isbn = 'Invalid format'\r\n                }else{\r\n                    if (!(/^(\\d+-)*(\\d+)$/.test(isbn))){\r\n                        newErrors.isbn = 'Can contain only digits and -' \r\n                    }else{     \r\n                        console.log(\"gut\")\r\n                }}\r\n        }\r\n\r\n        if(!title || title === ''){ \r\n            newErrors.title = 'Please add Title'\r\n        }\r\n\r\n        if(!author || author === ''){\r\n            newErrors.author = 'Please add Author'\r\n        }\r\n\r\n        if(!year || year === ''){\r\n            newErrors.year = 'Please add year'\r\n            }else{\r\n                if(!(/^[0-9]+$/.test(year))){\r\n                    newErrors.year = 'Can contain only digits'\r\n                }else{\r\n                    if(year.length != 4){\r\n                        newErrors.year = 'Invalid format'\r\n                    }else{\r\n        }}}\r\n        \r\n        if(!publisher || publisher === ''){\r\n            newErrors.publisher = 'Please add Publisher'\r\n        }\r\n\r\n        if(!language || language === ''){\r\n            newErrors.language = 'Please add Language'\r\n        }\r\n\r\n        return newErrors\r\n    } \r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        const formErrors = validateForm()\r\n        if (Object.keys(formErrors).length > 0){\r\n            setErrors(formErrors)\r\n        }else{\r\n            try{\r\n                await BookFinder.post(`/`, {\r\n                    isbn,\r\n                    title,\r\n                    author,\r\n                    year,\r\n                    publisher,\r\n                    language,\r\n                });\r\n            } catch (err) {\r\n                console.log(err);\r\n            }\r\n            navigate(\"/\")\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h4>Add New Book Entry</h4>\r\n            <form >\r\n\r\n                <div className=\"mb-3\">\r\n                    <label  htmlFor=\"isbn\" className=\"form-label\">ISBN</label>\r\n                    <input className=\"form-control\" type=\"text\" \r\n                    id=\"isbn\"\r\n                    value={isbn}\r\n                    onChange={(e) => {setIsbn(e.target.value); setField('isbn', e.target.value)}}\r\n                    placeholder=\"XXX-XX-XX-XXXXX-X\" \r\n                    required\r\n                    />\r\n                    <div>{errors.isbn}</div>\r\n                </div>\r\n\r\n                <div className=\"mb-3\">\r\n                    <label htmlFor=\"title\" className=\"form-label\">Title</label>\r\n                    <input className=\"form-control\" type=\"text\"\r\n                    id=\"title\"\r\n                    value={title}\r\n                    onChange={(e) => {setTitle(e.target.value); setField('title', e.target.value)}}  \r\n                    required\r\n                    />\r\n                    <div>{errors.title}</div>\r\n                </div>\r\n  \r\n                <div className=\"mb-3\">\r\n                    <label htmlFor=\"author\" className=\"form-label\">Author</label>\r\n                    <input className=\"form-control\" type=\"text\"\r\n                    id=\"author\"\r\n                    value={author} \r\n                    onChange={(e) => {setAuthor(e.target.value); setField('author', e.target.value)}}\r\n                    required\r\n                    />\r\n                    <div>{errors.author}</div>\r\n                </div>\r\n          \r\n                <div className=\"mb-3\">\r\n                    <label htmlFor=\"year\" className=\"form-label\">Year</label>\r\n                    <input className=\"form-control\" type=\"text\"\r\n                    id=\"year\"\r\n                    value={year}\r\n                    onChange={(e) => {setYear(e.target.value); setField('year', e.target.value)}}\r\n                    placeholder=\"YYYY\"\r\n                    required\r\n                    />\r\n                    <div>{errors.year}</div>\r\n                </div>\r\n\r\n                <div className=\"mb-3\">\r\n                    <label htmlFor=\"publisher\" className=\"form-label\">Publisher</label>\r\n                    <input className=\"form-control\" type=\"text\"\r\n                    id=\"publisher\"\r\n                    value={publisher} \r\n                    onChange={(e) => {setPublisher(e.target.value); setField('publisher', e.target.value)}}\r\n                    required\r\n                    />\r\n                    <div>{errors.publisher}</div>\r\n                </div>\r\n\r\n                <div className=\"mb-3\">\r\n                    <label htmlFor=\"language\" className=\"form-label\">Language</label>\r\n                    <input className=\"form-control\" type=\"text\"\r\n                    id=\"language\"\r\n                    value={language}\r\n                    onChange={(e) => {setLanguage(e.target.value); setField('language', e.target.value)}}\r\n                    required\r\n                    />\r\n                    <div>{errors.language}</div>\r\n                </div>\r\n\r\n                <div className=\"d-grid gap-2 d-md-flex justify-content-md-end\">\r\n                <button type=\"button\" onClick={(e) => {e.stopPropagation(); navigate(`/`)}} className=\"btn btn-primary\">Back</button>\r\n                <button type=\"submit\" onClick={handleSubmit} className=\"btn btn-success\">Submit</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddBook\r\n","C:\\Users\\svobo\\Documents\\Java_script\\ASF\\client\\src\\Components\\Header.jsx",[],[],"C:\\Users\\svobo\\Documents\\Java_script\\ASF\\client\\src\\Components\\BookList.jsx",["77"],[],"import React, {useContext, useEffect} from 'react'\r\nimport BookFinder from '../Apis/BookFinder';\r\nimport { BookContext } from '../cAPI';\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\n//let navigate = useNavigate\r\n\r\nconst BookList = (props) => {\r\n  const {books, setBooks} = useContext(BookContext)\r\n  \r\n  const navigate = useNavigate()\r\n\r\n  useEffect(() => {\r\n    const fetchdata = async () => {\r\n      try {\r\n        const response = await BookFinder.get(\"/\");\r\n        setBooks(response.data.data.books);\r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    }\r\n    fetchdata();\r\n  },[])\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"mb-3 d-grid gap-2 d-md-flex justify-content-md-end\">\r\n        <button onClick={(e) => navigate(`/addbook`)} className=\"btn btn-danger\">Add Book</button>\r\n      </div>\r\n      <div className=\"mb-3\">\r\n        <table className=\"table table-striped-columns\">\r\n          <thead>\r\n            <tr className=\"table-dark\">\r\n              <th scope=\"col\">Title</th>\r\n              <th scope=\"col\">Author</th>\r\n              <th scope=\"col\">Year</th>\r\n              <th scope=\"col\">Publisher</th>\r\n              <th scope=\"col\">ISBN</th>\r\n            </tr>\r\n          </thead>\r\n\r\n          <tbody>\r\n            {books && books.map((books) => {\r\n              return (\r\n                <tr onClick={() => navigate(`/${books.isbn}`)} key={books.isbn}>\r\n                  <td>{books.title}</td>\r\n                 <td>{books.author}</td>\r\n                  <td>{books.year}</td>\r\n                  <td>{books.publisher}</td>\r\n                  <td>{books.isbn}</td> \r\n                </tr>\r\n              )\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>      \r\n  )\r\n};\r\n\r\nexport default BookList\r\n","C:\\Users\\svobo\\Documents\\Java_script\\ASF\\client\\src\\Apis\\BookFinder.js",[],[],{"ruleId":"78","severity":1,"message":"79","line":28,"column":9,"nodeType":"80","endLine":28,"endColumn":11,"suggestions":"81"},{"ruleId":"78","severity":1,"message":"82","line":21,"column":7,"nodeType":"80","endLine":21,"endColumn":9,"suggestions":"83"},{"ruleId":"84","severity":1,"message":"85","line":27,"column":23,"nodeType":"86","messageId":"87","endLine":27,"endColumn":31},{"ruleId":"88","severity":1,"message":"89","line":64,"column":36,"nodeType":"90","messageId":"91","endLine":64,"endColumn":38},{"ruleId":"78","severity":1,"message":"92","line":23,"column":5,"nodeType":"80","endLine":23,"endColumn":7,"suggestions":"93"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'isbn'. Either include it or remove the dependency array.","ArrayExpression",["94"],"React Hook useEffect has missing dependencies: 'isbn' and 'setSelectetBook'. Either include them or remove the dependency array.",["95"],"no-unused-vars","'response' is assigned a value but never used.","Identifier","unusedVar","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'setBooks'. Either include it or remove the dependency array.",["96"],{"desc":"97","fix":"98"},{"desc":"99","fix":"100"},{"desc":"101","fix":"102"},"Update the dependencies array to be: [isbn]",{"range":"103","text":"104"},"Update the dependencies array to be: [isbn, setSelectetBook]",{"range":"105","text":"106"},"Update the dependencies array to be: [setBooks]",{"range":"107","text":"108"},[1042,1044],"[isbn]",[693,695],"[isbn, setSelectetBook]",[601,603],"[setBooks]"]